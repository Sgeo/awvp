/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case,
         unused_variables)]
pub type AW_ATTRIBUTE = i32;
pub const AW_LOGIN_NAME: AW_ATTRIBUTE = 0;
pub const AW_LOGIN_PASSWORD: AW_ATTRIBUTE = 1;
pub const AW_LOGIN_OWNER: AW_ATTRIBUTE = 2;
pub const AW_LOGIN_PRIVILEGE_PASSWORD: AW_ATTRIBUTE = 3;
pub const AW_LOGIN_PRIVILEGE_NUMBER: AW_ATTRIBUTE = 4;
pub const AW_LOGIN_PRIVILEGE_NAME: AW_ATTRIBUTE = 5;
pub const AW_LOGIN_APPLICATION: AW_ATTRIBUTE = 6;
pub const AW_LOGIN_EMAIL: AW_ATTRIBUTE = 7;
pub const AW_UNIVERSE_BROWSER_MINIMUM: AW_ATTRIBUTE = 8;
pub const AW_UNIVERSE_BROWSER_RELEASE: AW_ATTRIBUTE = 9;
pub const AW_UNIVERSE_BROWSER_BETA: AW_ATTRIBUTE = 10;
pub const AW_UNIVERSE_WORLD_MINIMUM: AW_ATTRIBUTE = 11;
pub const AW_UNIVERSE_WORLD_START: AW_ATTRIBUTE = 12;
pub const AW_UNIVERSE_REGISTRATION_REQUIRED: AW_ATTRIBUTE = 13;
pub const AW_UNIVERSE_BUILD_NUMBER: AW_ATTRIBUTE = 14;
pub const AW_UNIVERSE_MONTHLY_CHARGE: AW_ATTRIBUTE = 15;
pub const AW_UNIVERSE_ANNUAL_CHARGE: AW_ATTRIBUTE = 16;
pub const AW_UNIVERSE_REGISTER_METHOD: AW_ATTRIBUTE = 17;
pub const AW_UNIVERSE_TIME: AW_ATTRIBUTE = 18;
pub const AW_UNIVERSE_CITIZEN_CHANGES_ALLOWED: AW_ATTRIBUTE = 19;
pub const AW_UNIVERSE_BROWSER_RELEASE_22: AW_ATTRIBUTE = 20;
pub const AW_UNIVERSE_WELCOME_MESSAGE: AW_ATTRIBUTE = 21;
pub const AW_UNIVERSE_WORLD_RELEASE: AW_ATTRIBUTE = 22;
pub const AW_UNIVERSE_WORLD_BETA: AW_ATTRIBUTE = 23;
pub const AW_UNIVERSE_ALLOW_TOURISTS: AW_ATTRIBUTE = 24;
pub const AW_UNIVERSE_SEARCH_URL: AW_ATTRIBUTE = 25;
pub const AW_CITIZEN_NUMBER: AW_ATTRIBUTE = 26;
pub const AW_CITIZEN_NAME: AW_ATTRIBUTE = 27;
pub const AW_CITIZEN_PASSWORD: AW_ATTRIBUTE = 28;
pub const AW_CITIZEN_EMAIL: AW_ATTRIBUTE = 29;
pub const AW_CITIZEN_TIME_LEFT: AW_ATTRIBUTE = 30;
pub const AW_CITIZEN_PRIVILEGE_PASSWORD: AW_ATTRIBUTE = 31;
pub const AW_CITIZEN_IMMIGRATION_TIME: AW_ATTRIBUTE = 32;
pub const AW_CITIZEN_EXPIRATION_TIME: AW_ATTRIBUTE = 33;
pub const AW_CITIZEN_BETA: AW_ATTRIBUTE = 34;
pub const AW_CITIZEN_LAST_LOGIN: AW_ATTRIBUTE = 35;
pub const AW_CITIZEN_BOT_LIMIT: AW_ATTRIBUTE = 36;
pub const AW_CITIZEN_TOTAL_TIME: AW_ATTRIBUTE = 37;
pub const AW_CITIZEN_ENABLED: AW_ATTRIBUTE = 38;
pub const AW_CITIZEN_COMMENT: AW_ATTRIBUTE = 39;
pub const AW_CITIZEN_URL: AW_ATTRIBUTE = 40;
pub const AW_WORLD_NAME: AW_ATTRIBUTE = 41;
pub const AW_WORLD_TITLE: AW_ATTRIBUTE = 42;
pub const AW_WORLD_BACKDROP: AW_ATTRIBUTE = 43;
pub const AW_WORLD_GROUND: AW_ATTRIBUTE = 44;
pub const AW_WORLD_OBJECT_PATH: AW_ATTRIBUTE = 45;
pub const AW_WORLD_OBJECT_REFRESH: AW_ATTRIBUTE = 46;
pub const AW_WORLD_BUILD_RIGHT: AW_ATTRIBUTE = 47;
pub const AW_WORLD_EMINENT_DOMAIN_RIGHT: AW_ATTRIBUTE = 48;
pub const AW_WORLD_ENTER_RIGHT: AW_ATTRIBUTE = 49;
pub const AW_WORLD_SPECIAL_OBJECTS_RIGHT: AW_ATTRIBUTE = 50;
pub const AW_WORLD_FOG_RED: AW_ATTRIBUTE = 51;
pub const AW_WORLD_FOG_GREEN: AW_ATTRIBUTE = 52;
pub const AW_WORLD_FOG_BLUE: AW_ATTRIBUTE = 53;
pub const AW_WORLD_CARETAKER_CAPABILITY: AW_ATTRIBUTE = 54;
pub const AW_WORLD_RESTRICTED_RADIUS: AW_ATTRIBUTE = 55;
pub const AW_WORLD_PUBLIC_SPEAKER_CAPABILITY: AW_ATTRIBUTE = 56;
pub const AW_WORLD_PUBLIC_SPEAKER_RIGHT: AW_ATTRIBUTE = 57;
pub const AW_WORLD_CREATION_TIMESTAMP: AW_ATTRIBUTE = 58;
pub const AW_WORLD_HOME_PAGE: AW_ATTRIBUTE = 59;
pub const AW_WORLD_BUILD_NUMBER: AW_ATTRIBUTE = 60;
pub const AW_WORLD_OBJECT_PASSWORD: AW_ATTRIBUTE = 61;
pub const AW_WORLD_DISABLE_CREATE_URL: AW_ATTRIBUTE = 62;
pub const AW_WORLD_RATING: AW_ATTRIBUTE = 63;
pub const AW_WORLD_WELCOME_MESSAGE: AW_ATTRIBUTE = 64;
pub const AW_WORLD_EJECT_RIGHT: AW_ATTRIBUTE = 65;
pub const AW_WORLD_EJECT_CAPABILITY: AW_ATTRIBUTE = 66;
pub const AW_WORLD_CELL_LIMIT: AW_ATTRIBUTE = 67;
pub const AW_WORLD_BUILD_CAPABILITY: AW_ATTRIBUTE = 68;
pub const AW_WORLD_ALLOW_PASSTHRU: AW_ATTRIBUTE = 69;
pub const AW_WORLD_ALLOW_FLYING: AW_ATTRIBUTE = 70;
pub const AW_WORLD_ALLOW_TELEPORT: AW_ATTRIBUTE = 71;
pub const AW_WORLD_ALLOW_OBJECT_SELECT: AW_ATTRIBUTE = 72;
pub const AW_WORLD_BOTS_RIGHT: AW_ATTRIBUTE = 73;
pub const AW_WORLD_SPEAK_CAPABILITY: AW_ATTRIBUTE = 74;
pub const AW_WORLD_SPEAK_RIGHT: AW_ATTRIBUTE = 75;
pub const AW_WORLD_ALLOW_TOURIST_WHISPER: AW_ATTRIBUTE = 76;
pub const AW_WORLD_LIGHT_X: AW_ATTRIBUTE = 77;
pub const AW_WORLD_LIGHT_Y: AW_ATTRIBUTE = 78;
pub const AW_WORLD_LIGHT_Z: AW_ATTRIBUTE = 79;
pub const AW_WORLD_LIGHT_RED: AW_ATTRIBUTE = 80;
pub const AW_WORLD_LIGHT_GREEN: AW_ATTRIBUTE = 81;
pub const AW_WORLD_LIGHT_BLUE: AW_ATTRIBUTE = 82;
pub const AW_WORLD_AMBIENT_LIGHT_RED: AW_ATTRIBUTE = 83;
pub const AW_WORLD_AMBIENT_LIGHT_GREEN: AW_ATTRIBUTE = 84;
pub const AW_WORLD_AMBIENT_LIGHT_BLUE: AW_ATTRIBUTE = 85;
pub const AW_WORLD_ALLOW_AVATAR_COLLISION: AW_ATTRIBUTE = 86;
pub const AW_WORLD_FOG_ENABLE: AW_ATTRIBUTE = 87;
pub const AW_WORLD_FOG_MINIMUM: AW_ATTRIBUTE = 88;
pub const AW_WORLD_FOG_MAXIMUM: AW_ATTRIBUTE = 89;
pub const AW_WORLD_MAX_USERS: AW_ATTRIBUTE = 90;
pub const AW_WORLD_SIZE: AW_ATTRIBUTE = 91;
pub const AW_WORLD_OBJECT_COUNT: AW_ATTRIBUTE = 92;
pub const AW_WORLD_EXPIRATION: AW_ATTRIBUTE = 93;
pub const AW_WORLD_SPECIAL_COMMANDS_RIGHT: AW_ATTRIBUTE = 94;
pub const AW_WORLD_MAX_LIGHT_RADIUS: AW_ATTRIBUTE = 95;
pub const AW_WORLD_SKYBOX: AW_ATTRIBUTE = 96;
pub const AW_WORLD_MINIMUM_VISIBILITY: AW_ATTRIBUTE = 97;
pub const AW_WORLD_REPEATING_GROUND: AW_ATTRIBUTE = 98;
pub const AW_WORLD_KEYWORDS: AW_ATTRIBUTE = 99;
pub const AW_WORLD_ENABLE_TERRAIN: AW_ATTRIBUTE = 100;
pub const AW_WORLD_ALLOW_3_AXIS_ROTATION: AW_ATTRIBUTE = 101;
pub const AW_WORLD_TERRAIN_TIMESTAMP: AW_ATTRIBUTE = 102;
pub const AW_WORLD_ENTRY_POINT: AW_ATTRIBUTE = 103;
pub const AW_WORLD_SKY_NORTH_RED: AW_ATTRIBUTE = 104;
pub const AW_WORLD_SKY_NORTH_GREEN: AW_ATTRIBUTE = 105;
pub const AW_WORLD_SKY_NORTH_BLUE: AW_ATTRIBUTE = 106;
pub const AW_WORLD_SKY_SOUTH_RED: AW_ATTRIBUTE = 107;
pub const AW_WORLD_SKY_SOUTH_GREEN: AW_ATTRIBUTE = 108;
pub const AW_WORLD_SKY_SOUTH_BLUE: AW_ATTRIBUTE = 109;
pub const AW_WORLD_SKY_EAST_RED: AW_ATTRIBUTE = 110;
pub const AW_WORLD_SKY_EAST_GREEN: AW_ATTRIBUTE = 111;
pub const AW_WORLD_SKY_EAST_BLUE: AW_ATTRIBUTE = 112;
pub const AW_WORLD_SKY_WEST_RED: AW_ATTRIBUTE = 113;
pub const AW_WORLD_SKY_WEST_GREEN: AW_ATTRIBUTE = 114;
pub const AW_WORLD_SKY_WEST_BLUE: AW_ATTRIBUTE = 115;
pub const AW_WORLD_SKY_TOP_RED: AW_ATTRIBUTE = 116;
pub const AW_WORLD_SKY_TOP_GREEN: AW_ATTRIBUTE = 117;
pub const AW_WORLD_SKY_TOP_BLUE: AW_ATTRIBUTE = 118;
pub const AW_WORLD_SKY_BOTTOM_RED: AW_ATTRIBUTE = 119;
pub const AW_WORLD_SKY_BOTTOM_GREEN: AW_ATTRIBUTE = 120;
pub const AW_WORLD_SKY_BOTTOM_BLUE: AW_ATTRIBUTE = 121;
pub const AW_WORLD_CLOUDS_LAYER1_TEXTURE: AW_ATTRIBUTE = 122;
pub const AW_WORLD_CLOUDS_LAYER1_MASK: AW_ATTRIBUTE = 123;
pub const AW_WORLD_CLOUDS_LAYER1_TILE: AW_ATTRIBUTE = 124;
pub const AW_WORLD_CLOUDS_LAYER1_SPEED_X: AW_ATTRIBUTE = 125;
pub const AW_WORLD_CLOUDS_LAYER1_SPEED_Z: AW_ATTRIBUTE = 126;
pub const AW_WORLD_CLOUDS_LAYER1_OPACITY: AW_ATTRIBUTE = 127;
pub const AW_WORLD_CLOUDS_LAYER2_TEXTURE: AW_ATTRIBUTE = 128;
pub const AW_WORLD_CLOUDS_LAYER2_MASK: AW_ATTRIBUTE = 129;
pub const AW_WORLD_CLOUDS_LAYER2_TILE: AW_ATTRIBUTE = 130;
pub const AW_WORLD_CLOUDS_LAYER2_SPEED_X: AW_ATTRIBUTE = 131;
pub const AW_WORLD_CLOUDS_LAYER2_SPEED_Z: AW_ATTRIBUTE = 132;
pub const AW_WORLD_CLOUDS_LAYER2_OPACITY: AW_ATTRIBUTE = 133;
pub const AW_WORLD_CLOUDS_LAYER3_TEXTURE: AW_ATTRIBUTE = 134;
pub const AW_WORLD_CLOUDS_LAYER3_MASK: AW_ATTRIBUTE = 135;
pub const AW_WORLD_CLOUDS_LAYER3_TILE: AW_ATTRIBUTE = 136;
pub const AW_WORLD_CLOUDS_LAYER3_SPEED_X: AW_ATTRIBUTE = 137;
pub const AW_WORLD_CLOUDS_LAYER3_SPEED_Z: AW_ATTRIBUTE = 138;
pub const AW_WORLD_CLOUDS_LAYER3_OPACITY: AW_ATTRIBUTE = 139;
pub const AW_WORLD_DISABLE_CHAT: AW_ATTRIBUTE = 140;
pub const AW_WORLD_ALLOW_CITIZEN_WHISPER: AW_ATTRIBUTE = 141;
pub const AW_WORLD_ALWAYS_SHOW_NAMES: AW_ATTRIBUTE = 142;
pub const AW_WORLD_DISABLE_AVATAR_LIST: AW_ATTRIBUTE = 143;
pub const AW_WORLD_AVATAR_REFRESH_RATE: AW_ATTRIBUTE = 144;
pub const AW_WORLD_WATER_TEXTURE: AW_ATTRIBUTE = 145;
pub const AW_WORLD_WATER_MASK: AW_ATTRIBUTE = 146;
pub const AW_WORLD_WATER_BOTTOM_TEXTURE: AW_ATTRIBUTE = 147;
pub const AW_WORLD_WATER_BOTTOM_MASK: AW_ATTRIBUTE = 148;
pub const AW_WORLD_WATER_OPACITY: AW_ATTRIBUTE = 149;
pub const AW_WORLD_WATER_RED: AW_ATTRIBUTE = 150;
pub const AW_WORLD_WATER_GREEN: AW_ATTRIBUTE = 151;
pub const AW_WORLD_WATER_BLUE: AW_ATTRIBUTE = 152;
pub const AW_WORLD_WATER_LEVEL: AW_ATTRIBUTE = 153;
pub const AW_WORLD_WATER_SURFACE_MOVE: AW_ATTRIBUTE = 154;
pub const AW_WORLD_WATER_WAVE_MOVE: AW_ATTRIBUTE = 155;
pub const AW_WORLD_WATER_SPEED: AW_ATTRIBUTE = 156;
pub const AW_WORLD_WATER_ENABLED: AW_ATTRIBUTE = 157;
pub const AW_WORLD_EMINENT_DOMAIN_CAPABILITY: AW_ATTRIBUTE = 158;
pub const AW_WORLD_LIGHT_TEXTURE: AW_ATTRIBUTE = 159;
pub const AW_WORLD_LIGHT_MASK: AW_ATTRIBUTE = 160;
pub const AW_WORLD_LIGHT_DRAW_SIZE: AW_ATTRIBUTE = 161;
pub const AW_WORLD_LIGHT_DRAW_FRONT: AW_ATTRIBUTE = 162;
pub const AW_WORLD_LIGHT_DRAW_BRIGHT: AW_ATTRIBUTE = 163;
pub const AW_WORLD_TERRAIN_AMBIENT: AW_ATTRIBUTE = 164;
pub const AW_WORLD_TERRAIN_DIFFUSE: AW_ATTRIBUTE = 165;
pub const AW_WORLD_WATER_VISIBILITY: AW_ATTRIBUTE = 166;
pub const AW_WORLD_SOUND_FOOTSTEP: AW_ATTRIBUTE = 167;
pub const AW_WORLD_SOUND_WATER_ENTER: AW_ATTRIBUTE = 168;
pub const AW_WORLD_SOUND_WATER_EXIT: AW_ATTRIBUTE = 169;
pub const AW_WORLD_SOUND_AMBIENT: AW_ATTRIBUTE = 170;
pub const AW_WORLD_GRAVITY: AW_ATTRIBUTE = 171;
pub const AW_WORLD_BUOYANCY: AW_ATTRIBUTE = 172;
pub const AW_WORLD_ALLOW_TOURIST_BUILD: AW_ATTRIBUTE = 173;
pub const AW_WORLD_ENABLE_REFERER: AW_ATTRIBUTE = 174;
pub const AW_WORLD_WATER_UNDER_TERRAIN: AW_ATTRIBUTE = 175;
pub const AW_WORLD_TERRAIN_OFFSET: AW_ATTRIBUTE = 176;
pub const AW_WORLD_VOIP_RIGHT: AW_ATTRIBUTE = 177;
pub const AW_WORLD_DISABLE_MULTIPLE_MEDIA: AW_ATTRIBUTE = 178;
pub const AW_MY_X: AW_ATTRIBUTE = 179;
pub const AW_MY_Y: AW_ATTRIBUTE = 180;
pub const AW_MY_Z: AW_ATTRIBUTE = 181;
pub const AW_MY_YAW: AW_ATTRIBUTE = 182;
pub const AW_MY_PITCH: AW_ATTRIBUTE = 183;
pub const AW_MY_TYPE: AW_ATTRIBUTE = 184;
pub const AW_MY_GESTURE: AW_ATTRIBUTE = 185;
pub const AW_MY_STATE: AW_ATTRIBUTE = 186;
pub const AW_AVATAR_SESSION: AW_ATTRIBUTE = 187;
pub const AW_AVATAR_NAME: AW_ATTRIBUTE = 188;
pub const AW_AVATAR_X: AW_ATTRIBUTE = 189;
pub const AW_AVATAR_Y: AW_ATTRIBUTE = 190;
pub const AW_AVATAR_Z: AW_ATTRIBUTE = 191;
pub const AW_AVATAR_YAW: AW_ATTRIBUTE = 192;
pub const AW_AVATAR_PITCH: AW_ATTRIBUTE = 193;
pub const AW_AVATAR_TYPE: AW_ATTRIBUTE = 194;
pub const AW_AVATAR_GESTURE: AW_ATTRIBUTE = 195;
pub const AW_AVATAR_STATE: AW_ATTRIBUTE = 196;
pub const AW_AVATAR_ADDRESS: AW_ATTRIBUTE = 197;
pub const AW_AVATAR_VERSION: AW_ATTRIBUTE = 198;
pub const AW_AVATAR_CITIZEN: AW_ATTRIBUTE = 199;
pub const AW_AVATAR_PRIVILEGE: AW_ATTRIBUTE = 200;
pub const AW_CHAT_SESSION: AW_ATTRIBUTE = 201;
pub const AW_CHAT_MESSAGE: AW_ATTRIBUTE = 202;
pub const AW_CELL_X: AW_ATTRIBUTE = 203;
pub const AW_CELL_Z: AW_ATTRIBUTE = 204;
pub const AW_CELL_SEQUENCE: AW_ATTRIBUTE = 205;
pub const AW_CELL_SIZE: AW_ATTRIBUTE = 206;
pub const AW_CELL_ITERATOR: AW_ATTRIBUTE = 207;
pub const AW_CELL_COMBINE: AW_ATTRIBUTE = 208;
pub const AW_OBJECT_NUMBER: AW_ATTRIBUTE = 209;
pub const AW_OBJECT_X: AW_ATTRIBUTE = 210;
pub const AW_OBJECT_Y: AW_ATTRIBUTE = 211;
pub const AW_OBJECT_Z: AW_ATTRIBUTE = 212;
pub const AW_OBJECT_YAW: AW_ATTRIBUTE = 213;
pub const AW_OBJECT_TILT: AW_ATTRIBUTE = 214;
pub const AW_OBJECT_ROLL: AW_ATTRIBUTE = 215;
pub const AW_OBJECT_MODEL: AW_ATTRIBUTE = 216;
pub const AW_OBJECT_DESCRIPTION: AW_ATTRIBUTE = 217;
pub const AW_OBJECT_ACTION: AW_ATTRIBUTE = 218;
pub const AW_OBJECT_OLD_NUMBER: AW_ATTRIBUTE = 219;
pub const AW_OBJECT_OLD_X: AW_ATTRIBUTE = 220;
pub const AW_OBJECT_OLD_Z: AW_ATTRIBUTE = 221;
pub const AW_OBJECT_OWNER: AW_ATTRIBUTE = 222;
pub const AW_OBJECT_SESSION: AW_ATTRIBUTE = 223;
pub const AW_OBJECT_BUILD_TIMESTAMP: AW_ATTRIBUTE = 224;
pub const AW_QUERY_COMPLETE: AW_ATTRIBUTE = 225;
pub const AW_CHAT_TYPE: AW_ATTRIBUTE = 226;
pub const AW_LICENSE_NAME: AW_ATTRIBUTE = 227;
pub const AW_LICENSE_PASSWORD: AW_ATTRIBUTE = 228;
pub const AW_LICENSE_USERS: AW_ATTRIBUTE = 229;
pub const AW_LICENSE_RANGE: AW_ATTRIBUTE = 230;
pub const AW_LICENSE_EMAIL: AW_ATTRIBUTE = 231;
pub const AW_LICENSE_COMMENT: AW_ATTRIBUTE = 232;
pub const AW_LICENSE_CREATION_TIME: AW_ATTRIBUTE = 233;
pub const AW_LICENSE_EXPIRATION_TIME: AW_ATTRIBUTE = 234;
pub const AW_LICENSE_LAST_START: AW_ATTRIBUTE = 235;
pub const AW_LICENSE_LAST_ADDRESS: AW_ATTRIBUTE = 236;
pub const AW_LICENSE_HIDDEN: AW_ATTRIBUTE = 237;
pub const AW_LICENSE_ALLOW_TOURISTS: AW_ATTRIBUTE = 238;
pub const AW_WORLDLIST_NAME: AW_ATTRIBUTE = 239;
pub const AW_WORLDLIST_STATUS: AW_ATTRIBUTE = 240;
pub const AW_WORLDLIST_USERS: AW_ATTRIBUTE = 241;
pub const AW_WORLDLIST_RATING: AW_ATTRIBUTE = 242;
pub const AW_WORLDLIST_MORE: AW_ATTRIBUTE = 243;
pub const AW_EJECT_SESSION: AW_ATTRIBUTE = 244;
pub const AW_EJECT_DURATION: AW_ATTRIBUTE = 245;
pub const AW_EJECTION_TYPE: AW_ATTRIBUTE = 246;
pub const AW_EJECTION_ADDRESS: AW_ATTRIBUTE = 247;
pub const AW_EJECTION_EXPIRATION_TIME: AW_ATTRIBUTE = 248;
pub const AW_EJECTION_CREATION_TIME: AW_ATTRIBUTE = 249;
pub const AW_EJECTION_COMMENT: AW_ATTRIBUTE = 250;
pub const AW_DISCONNECT_REASON: AW_ATTRIBUTE = 251;
pub const AW_FILE_RECIPIENT: AW_ATTRIBUTE = 252;
pub const AW_FILE_SENDER: AW_ATTRIBUTE = 253;
pub const AW_FILE_SENDER_NAME: AW_ATTRIBUTE = 254;
pub const AW_FILE_SESSION: AW_ATTRIBUTE = 255;
pub const AW_FILE_ADDRESS: AW_ATTRIBUTE = 256;
pub const AW_FILE_PORT: AW_ATTRIBUTE = 257;
pub const AW_CLICKED_SESSION: AW_ATTRIBUTE = 258;
pub const AW_CLICKED_NAME: AW_ATTRIBUTE = 259;
pub const AW_URL_NAME: AW_ATTRIBUTE = 260;
pub const AW_URL_POST: AW_ATTRIBUTE = 261;
pub const AW_URL_TARGET: AW_ATTRIBUTE = 262;
pub const AW_URL_TARGET_3D: AW_ATTRIBUTE = 263;
pub const AW_TELEPORT_WORLD: AW_ATTRIBUTE = 264;
pub const AW_TELEPORT_X: AW_ATTRIBUTE = 265;
pub const AW_TELEPORT_Y: AW_ATTRIBUTE = 266;
pub const AW_TELEPORT_Z: AW_ATTRIBUTE = 267;
pub const AW_TELEPORT_YAW: AW_ATTRIBUTE = 268;
pub const AW_TELEPORT_WARP: AW_ATTRIBUTE = 269;
pub const AW_SERVER_BUILD: AW_ATTRIBUTE = 270;
pub const AW_SERVER_NAME: AW_ATTRIBUTE = 271;
pub const AW_SERVER_PASSWORD: AW_ATTRIBUTE = 272;
pub const AW_SERVER_REGISTRY: AW_ATTRIBUTE = 273;
pub const AW_SERVER_CARETAKERS: AW_ATTRIBUTE = 274;
pub const AW_SERVER_ID: AW_ATTRIBUTE = 275;
pub const AW_SERVER_ENABLED: AW_ATTRIBUTE = 276;
pub const AW_SERVER_STATE: AW_ATTRIBUTE = 277;
pub const AW_SERVER_USERS: AW_ATTRIBUTE = 278;
pub const AW_SERVER_MAX_USERS: AW_ATTRIBUTE = 279;
pub const AW_SERVER_OBJECTS: AW_ATTRIBUTE = 280;
pub const AW_SERVER_SIZE: AW_ATTRIBUTE = 281;
pub const AW_SERVER_EXPIRATION: AW_ATTRIBUTE = 282;
pub const AW_SERVER_START_RC: AW_ATTRIBUTE = 283;
pub const AW_SERVER_MORE: AW_ATTRIBUTE = 284;
pub const AW_SERVER_TERRAIN_NODES: AW_ATTRIBUTE = 285;
pub const AW_TERRAIN_X: AW_ATTRIBUTE = 286;
pub const AW_TERRAIN_Z: AW_ATTRIBUTE = 287;
pub const AW_TERRAIN_PAGE_X: AW_ATTRIBUTE = 288;
pub const AW_TERRAIN_PAGE_Z: AW_ATTRIBUTE = 289;
pub const AW_TERRAIN_NODE_X: AW_ATTRIBUTE = 290;
pub const AW_TERRAIN_NODE_Z: AW_ATTRIBUTE = 291;
pub const AW_TERRAIN_NODE_SIZE: AW_ATTRIBUTE = 292;
pub const AW_TERRAIN_NODE_TEXTURE_COUNT: AW_ATTRIBUTE = 293;
pub const AW_TERRAIN_NODE_HEIGHT_COUNT: AW_ATTRIBUTE = 294;
pub const AW_TERRAIN_NODE_TEXTURES: AW_ATTRIBUTE = 295;
pub const AW_TERRAIN_NODE_HEIGHTS: AW_ATTRIBUTE = 296;
pub const AW_TERRAIN_SEQUENCE: AW_ATTRIBUTE = 297;
pub const AW_TERRAIN_COMPLETE: AW_ATTRIBUTE = 298;
pub const AW_ENTER_GLOBAL: AW_ATTRIBUTE = 299;
pub const AW_CONSOLE_RED: AW_ATTRIBUTE = 300;
pub const AW_CONSOLE_GREEN: AW_ATTRIBUTE = 301;
pub const AW_CONSOLE_BLUE: AW_ATTRIBUTE = 302;
pub const AW_CONSOLE_BOLD: AW_ATTRIBUTE = 303;
pub const AW_CONSOLE_ITALICS: AW_ATTRIBUTE = 304;
pub const AW_CONSOLE_MESSAGE: AW_ATTRIBUTE = 305;
pub const AW_BOTGRAM_TO: AW_ATTRIBUTE = 306;
pub const AW_BOTGRAM_FROM: AW_ATTRIBUTE = 307;
pub const AW_BOTGRAM_FROM_NAME: AW_ATTRIBUTE = 308;
pub const AW_BOTGRAM_TYPE: AW_ATTRIBUTE = 309;
pub const AW_BOTGRAM_TEXT: AW_ATTRIBUTE = 310;
pub const AW_TOOLBAR_ID: AW_ATTRIBUTE = 311;
pub const AW_TOOLBAR_SESSION: AW_ATTRIBUTE = 312;
pub const AW_USERLIST_MORE: AW_ATTRIBUTE = 313;
pub const AW_USERLIST_NAME: AW_ATTRIBUTE = 314;
pub const AW_USERLIST_WORLD: AW_ATTRIBUTE = 315;
pub const AW_USERLIST_EMAIL: AW_ATTRIBUTE = 316;
pub const AW_USERLIST_CITIZEN: AW_ATTRIBUTE = 317;
pub const AW_USERLIST_PRIVILEGE: AW_ATTRIBUTE = 318;
pub const AW_USERLIST_STATE: AW_ATTRIBUTE = 319;
pub const AW_USERLIST_ADDRESS: AW_ATTRIBUTE = 320;
pub const AW_USERLIST_ENABLED: AW_ATTRIBUTE = 321;
pub const AW_USERLIST_ID: AW_ATTRIBUTE = 322;
pub const AW_CONTACT_NUMBER: AW_ATTRIBUTE = 323;
pub const AW_CONTACT_STATUS: AW_ATTRIBUTE = 324;
pub const AW_CONTACT_NAME: AW_ATTRIBUTE = 325;
pub const AW_CONTACT_WORLD: AW_ATTRIBUTE = 326;
pub const AW_CONTACT_MORE: AW_ATTRIBUTE = 327;
pub const AW_CONTACT_OPTIONS: AW_ATTRIBUTE = 328;
pub const AW_TELEGRAM_TO: AW_ATTRIBUTE = 329;
pub const AW_TELEGRAM_FROM: AW_ATTRIBUTE = 330;
pub const AW_TELEGRAM_TEXT: AW_ATTRIBUTE = 331;
pub const AW_TELEGRAM_SENT: AW_ATTRIBUTE = 332;
pub const AW_TELEGRAM_MORE: AW_ATTRIBUTE = 333;
pub const AW_JOIN_NAME: AW_ATTRIBUTE = 334;
pub const AW_JOIN_CITIZEN: AW_ATTRIBUTE = 335;
pub const AW_JOIN_WORLD: AW_ATTRIBUTE = 336;
pub const AW_JOIN_X: AW_ATTRIBUTE = 337;
pub const AW_JOIN_Y: AW_ATTRIBUTE = 338;
pub const AW_JOIN_Z: AW_ATTRIBUTE = 339;
pub const AW_JOIN_YAW: AW_ATTRIBUTE = 340;
pub const AW_REGISTER_CC_NAME: AW_ATTRIBUTE = 341;
pub const AW_REGISTER_CC_NUMBER: AW_ATTRIBUTE = 342;
pub const AW_REGISTER_CC_MONTH: AW_ATTRIBUTE = 343;
pub const AW_REGISTER_CC_YEAR: AW_ATTRIBUTE = 344;
pub const AW_REGISTER_ADDRESS: AW_ATTRIBUTE = 345;
pub const AW_REGISTER_CITY: AW_ATTRIBUTE = 346;
pub const AW_REGISTER_STATE: AW_ATTRIBUTE = 347;
pub const AW_REGISTER_ZIP: AW_ATTRIBUTE = 348;
pub const AW_REGISTER_PHONE_NUMBER: AW_ATTRIBUTE = 349;
pub const AW_REGISTER_BUSINESS_NAME: AW_ATTRIBUTE = 350;
pub const AW_REGISTER_VENDOR: AW_ATTRIBUTE = 351;
pub const AW_REGISTER_RESULT: AW_ATTRIBUTE = 352;
pub const AW_REGISTER_METHOD: AW_ATTRIBUTE = 353;
pub const AW_VOIP_DATA: AW_ATTRIBUTE = 354;
pub const AW_MAX_ATTRIBUTE: AW_ATTRIBUTE = 355;
pub type AW_EVENT_ATTRIBUTE = i32;
pub const AW_EVENT_AVATAR_ADD: AW_EVENT_ATTRIBUTE = 0;
pub const AW_EVENT_AVATAR_CHANGE: AW_EVENT_ATTRIBUTE = 1;
pub const AW_EVENT_AVATAR_DELETE: AW_EVENT_ATTRIBUTE = 2;
pub const AW_EVENT_CELL_BEGIN: AW_EVENT_ATTRIBUTE = 3;
pub const AW_EVENT_CELL_OBJECT: AW_EVENT_ATTRIBUTE = 4;
pub const AW_EVENT_CELL_END: AW_EVENT_ATTRIBUTE = 5;
pub const AW_EVENT_CHAT: AW_EVENT_ATTRIBUTE = 6;
pub const AW_EVENT_OBJECT_ADD: AW_EVENT_ATTRIBUTE = 7;
pub const AW_EVENT_OBJECT_DELETE: AW_EVENT_ATTRIBUTE = 8;
pub const AW_EVENT_UNIVERSE_ATTRIBUTES: AW_EVENT_ATTRIBUTE = 9;
pub const AW_EVENT_UNIVERSE_DISCONNECT: AW_EVENT_ATTRIBUTE = 10;
pub const AW_EVENT_WORLD_ATTRIBUTES: AW_EVENT_ATTRIBUTE = 11;
pub const AW_EVENT_WORLD_INFO: AW_EVENT_ATTRIBUTE = 12;
pub const AW_EVENT_WORLD_DISCONNECT: AW_EVENT_ATTRIBUTE = 13;
pub const AW_EVENT_SEND_FILE: AW_EVENT_ATTRIBUTE = 14;
pub const AW_EVENT_CONTACT_STATE: AW_EVENT_ATTRIBUTE = 15;
pub const AW_EVENT_TELEGRAM: AW_EVENT_ATTRIBUTE = 16;
pub const AW_EVENT_JOIN: AW_EVENT_ATTRIBUTE = 17;
pub const AW_EVENT_OBJECT_CLICK: AW_EVENT_ATTRIBUTE = 18;
pub const AW_EVENT_OBJECT_SELECT: AW_EVENT_ATTRIBUTE = 19;
pub const AW_EVENT_AVATAR_CLICK: AW_EVENT_ATTRIBUTE = 20;
pub const AW_EVENT_URL: AW_EVENT_ATTRIBUTE = 21;
pub const AW_EVENT_URL_CLICK: AW_EVENT_ATTRIBUTE = 22;
pub const AW_EVENT_TELEPORT: AW_EVENT_ATTRIBUTE = 23;
pub const AW_EVENT_ADMIN_WORLD_INFO: AW_EVENT_ATTRIBUTE = 24;
pub const AW_EVENT_ADMIN_WORLD_DELETE: AW_EVENT_ATTRIBUTE = 25;
pub const AW_EVENT_TERRAIN_BEGIN: AW_EVENT_ATTRIBUTE = 26;
pub const AW_EVENT_TERRAIN_DATA: AW_EVENT_ATTRIBUTE = 27;
pub const AW_EVENT_TERRAIN_END: AW_EVENT_ATTRIBUTE = 28;
pub const AW_EVENT_CONSOLE_MESSAGE: AW_EVENT_ATTRIBUTE = 29;
pub const AW_EVENT_TERRAIN_CHANGED: AW_EVENT_ATTRIBUTE = 30;
pub const AW_EVENT_BOTGRAM: AW_EVENT_ATTRIBUTE = 31;
pub const AW_EVENT_TOOLBAR_CLICK: AW_EVENT_ATTRIBUTE = 32;
pub const AW_EVENT_USER_INFO: AW_EVENT_ATTRIBUTE = 33;
pub const AW_EVENT_VOIP_DATA: AW_EVENT_ATTRIBUTE = 34;
pub const AW_MAX_EVENT: AW_EVENT_ATTRIBUTE = 35;
pub type AW_CALLBACK = i32;
pub const AW_CALLBACK_LOGIN: AW_CALLBACK = 0;
pub const AW_CALLBACK_ENTER: AW_CALLBACK = 1;
pub const AW_CALLBACK_OBJECT_RESULT: AW_CALLBACK = 2;
pub const AW_CALLBACK_LICENSE_ATTRIBUTES: AW_CALLBACK = 3;
pub const AW_CALLBACK_LICENSE_RESULT: AW_CALLBACK = 4;
pub const AW_CALLBACK_CITIZEN_ATTRIBUTES: AW_CALLBACK = 5;
pub const AW_CALLBACK_CITIZEN_RESULT: AW_CALLBACK = 6;
pub const AW_CALLBACK_QUERY: AW_CALLBACK = 7;
pub const AW_CALLBACK_WORLD_LIST: AW_CALLBACK = 8;
pub const AW_CALLBACK_SEND_FILE: AW_CALLBACK = 9;
pub const AW_CALLBACK_JOIN: AW_CALLBACK = 10;
pub const AW_CALLBACK_PASSWORD_SEND: AW_CALLBACK = 11;
pub const AW_CALLBACK_IMMIGRATE: AW_CALLBACK = 12;
pub const AW_CALLBACK_REGISTER: AW_CALLBACK = 13;
pub const AW_CALLBACK_UNIVERSE_EJECTION: AW_CALLBACK = 14;
pub const AW_CALLBACK_UNIVERSE_EJECTION_RESULT: AW_CALLBACK = 15;
pub const AW_CALLBACK_ADDRESS: AW_CALLBACK = 16;
pub const AW_CALLBACK_WORLD_EJECTION: AW_CALLBACK = 17;
pub const AW_CALLBACK_WORLD_EJECTION_RESULT: AW_CALLBACK = 18;
pub const AW_CALLBACK_ADMIN_WORLD_LIST: AW_CALLBACK = 19;
pub const AW_CALLBACK_ADMIN_WORLD_RESULT: AW_CALLBACK = 20;
pub const AW_CALLBACK_DELETE_ALL_OBJECTS_RESULT: AW_CALLBACK = 21;
pub const AW_CALLBACK_CELL_RESULT: AW_CALLBACK = 22;
pub const AW_CALLBACK_RELOAD_REGISTRY: AW_CALLBACK = 23;
pub const AW_CALLBACK_ATTRIBUTES_RESET_RESULT: AW_CALLBACK = 24;
pub const AW_CALLBACK_ADMIN: AW_CALLBACK = 25;
pub const AW_CALLBACK_CONTACT_ADD: AW_CALLBACK = 26;
pub const AW_CALLBACK_TELEGRAM_RESULT: AW_CALLBACK = 27;
pub const AW_CALLBACK_TERRAIN_SET_RESULT: AW_CALLBACK = 28;
pub const AW_CALLBACK_TERRAIN_NEXT_RESULT: AW_CALLBACK = 29;
pub const AW_CALLBACK_TERRAIN_DELETE_ALL_RESULT: AW_CALLBACK = 30;
pub const AW_CALLBACK_TERRAIN_LOAD_NODE_RESULT: AW_CALLBACK = 31;
pub const AW_CALLBACK_BOTGRAM_RESULT: AW_CALLBACK = 32;
pub const AW_CALLBACK_USER_LIST: AW_CALLBACK = 33;
pub const AW_MAX_CALLBACK: AW_CALLBACK = 34;
pub type AW_CHAT_TYPES = i32;
pub const AW_CHAT_SAID: AW_CHAT_TYPES = 0;
pub const AW_CHAT_BROADCAST: AW_CHAT_TYPES = 1;
pub const AW_CHAT_WHISPER: AW_CHAT_TYPES = 2;
pub type AW_CONTACT_STATES = i32;
pub const AW_CONTACT_OFFLINE: AW_CONTACT_STATES = 0;
pub const AW_CONTACT_ONLINE: AW_CONTACT_STATES = 1;
pub const AW_CONTACT_NOT_A_CITIZEN: AW_CONTACT_STATES = 2;
pub const AW_CONTACT_AFK: AW_CONTACT_STATES = 3;
pub const AW_CONTACT_UNKNOWN: AW_CONTACT_STATES = 4;
pub type AW_WORLD_STATES = i32;
pub const AW_WORLDSTATUS_UNKNOWN: AW_WORLD_STATES = 0;
pub const AW_WORLDSTATUS_PUBLIC: AW_WORLD_STATES = 1;
pub const AW_WORLDSTATUS_PRIVATE: AW_WORLD_STATES = 2;
pub const AW_WORLDSTATUS_STOPPED: AW_WORLD_STATES = 3;
pub type AW_SERVER_STATES = i32;
pub const AW_SERVER_STOPPED: AW_SERVER_STATES = 0;
pub const AW_SERVER_STARTING: AW_SERVER_STATES = 1;
pub const AW_SERVER_START_WAIT: AW_SERVER_STATES = 2;
pub const AW_SERVER_RUNNING: AW_SERVER_STATES = 3;
pub type AW_CONNECTION_TYPES = i32;
pub const AW_CONNECTION_DIRECT: AW_CONNECTION_TYPES = 0;
pub const AW_CONNECTION_FIREWALL_NO_PROXY: AW_CONNECTION_TYPES = 1;
pub const AW_CONNECTION_PROXY_AUTO: AW_CONNECTION_TYPES = 2;
pub const AW_CONNECTION_PROXY_NO_AUTH: AW_CONNECTION_TYPES = 3;
pub const AW_CONNECTION_PROXY_BASIC: AW_CONNECTION_TYPES = 4;
pub const AW_CONNECTION_PROXY_AUTH_NTLM: AW_CONNECTION_TYPES = 5;
pub const AW_CONNECTION_MAX: AW_CONNECTION_TYPES = 6;
pub type AW_CONNECTION_STATES = i32;
pub const AW_CONNECTION_STATE_NOT_CONNECTED: AW_CONNECTION_STATES = 0;
pub const AW_CONNECTION_STATE_CONNECTING_TO_PROXY: AW_CONNECTION_STATES = 1;
pub const AW_CONNECTION_STATE_NEGOTIATING_WITH_PROXY: AW_CONNECTION_STATES =
    2;
pub const AW_CONNECTION_STATE_CONNECTING_TO_TUNNEL: AW_CONNECTION_STATES = 3;
pub const AW_CONNECTION_STATE_CONNECTING_TO_UNIVERSE: AW_CONNECTION_STATES =
    4;
pub const AW_CONNECTION_STATE_CONNECTED: AW_CONNECTION_STATES = 5;
pub const AW_CONNECTION_STATE_PASSWORD_REQUIRED: AW_CONNECTION_STATES = 6;
pub type AW_EJECTION_TYPES = i32;
pub const AW_EJECT_BY_ADDRESS: AW_EJECTION_TYPES = 0;
pub const AW_EJECT_BY_COMPUTER: AW_EJECTION_TYPES = 1;
pub const AW_EJECT_BY_CITIZEN: AW_EJECTION_TYPES = 2;
pub type AW_AVATAR_STATES = i32;
pub const AW_AVATAR_STATE_WALKING: AW_AVATAR_STATES = 0;
pub const AW_AVATAR_STATE_RUNNING: AW_AVATAR_STATES = 1;
pub const AW_AVATAR_STATE_FLYING: AW_AVATAR_STATES = 2;
pub const AW_AVATAR_STATE_SWIMMING: AW_AVATAR_STATES = 3;
pub const AW_AVATAR_STATE_FALLING: AW_AVATAR_STATES = 4;
pub const AW_AVATAR_STATE_JUMPING: AW_AVATAR_STATES = 5;
pub const AW_AVATAR_STATE_WARPING: AW_AVATAR_STATES = 6;
pub type AW_REGISTER_METHODS = i32;
pub const AW_REGISTER_MONTHLY: AW_REGISTER_METHODS = 0;
pub const AW_REGISTER_ANNUAL: AW_REGISTER_METHODS = 1;
pub const AW_REGISTER_USER: AW_REGISTER_METHODS = 2;

static mut CURRENT_INSTANCE: *mut ::std::os::raw::c_void = 1 as *mut _;


#[no_mangle] pub extern fn aw_term() {}

#[no_mangle] pub extern fn aw_create_resolved(address: ::std::os::raw::c_ulong,
                          port: ::std::os::raw::c_int,
                          instance: *mut *mut ::std::os::raw::c_void)
 -> ::std::os::raw::c_int {
    debug!("aw_create_resolved(..., ...);");
    let box_ = Box::new(());
    unsafe {
        *instance = Box::into_raw(box_) as *mut _;
        CURRENT_INSTANCE = *instance;
    }
    0
 }
#[no_mangle] pub extern fn aw_destroy() -> ::std::os::raw::c_int { 0 }



#[no_mangle] pub extern fn aw_event(a: AW_EVENT_ATTRIBUTE)
 -> ::std::option::Option<extern "C" fn(a: AW_EVENT_ATTRIBUTE)> { None }
#[no_mangle] pub extern fn aw_event_set(a: AW_EVENT_ATTRIBUTE,
                    handler: ::std::option::Option<extern "C" fn()>)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_enter(world: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_exit() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_say(message: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_whisper(session_id: ::std::os::raw::c_int,
                  message: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_state_change() -> ::std::os::raw::c_int{ 0 }
#[no_mangle] pub extern fn aw_citizen_attributes_by_name(name: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_citizen_attributes_by_number(citizen: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_citizen_add() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_citizen_change() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_citizen_delete(citizen: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_citizen_next() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_citizen_previous() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_license_add() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_license_attributes(name: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_license_change() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_license_delete(name: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_license_next() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_license_previous() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_list() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_object_add() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_object_change() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_object_delete() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_object_load() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_query(x_sector: ::std::os::raw::c_int,
                z_sector: ::std::os::raw::c_int,
                sequence: *mut [::std::os::raw::c_int; 3usize])
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_query_5x5(x_sector: ::std::os::raw::c_int,
                    z_sector: ::std::os::raw::c_int,
                    sequence: *mut [::std::os::raw::c_int; 5usize])
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_random() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_attributes_change() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_universe_attributes_change() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_session() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_eject() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_sector_from_cell(cell: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_universe_ejection_add() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_universe_ejection_delete(address: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_universe_ejection_lookup() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_universe_ejection_next() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_universe_ejection_previous() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_object_click() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_object_select() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_avatar_click(session_id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_address(session_id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_url_send(session_id: ::std::os::raw::c_int,
                   url: *const ::std::os::raw::c_char,
                   target: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_url_click(url: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_teleport(session_id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_ejection_add() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_ejection_delete() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_ejection_lookup() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_ejection_next() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_ejection_previous() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_attribute_set(attribute: ::std::os::raw::c_int,
                              value: *mut ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_attribute_get(attribute: ::std::os::raw::c_int,
                              read_only: *mut ::std::os::raw::c_int,
                              value: *mut ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_delete_all_objects() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_cell_next() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_reload_registry() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_world_attributes_reset() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_terrain_set(x: ::std::os::raw::c_int, z: ::std::os::raw::c_int,
                      count: ::std::os::raw::c_int,
                      texture: ::std::os::raw::c_int,
                      heights: *mut ::std::os::raw::c_short)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_terrain_query(page_x: ::std::os::raw::c_int,
                        page_z: ::std::os::raw::c_int,
                        sequence: ::std::os::raw::c_ulong)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_terrain_next() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_terrain_delete_all() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_terrain_load_node() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_console_message(session_id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_user_data_set(data: *mut ::std::os::raw::c_void)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_user_data() -> *mut ::std::os::raw::c_void { 0 as *mut _ }
#[no_mangle] pub extern fn aw_avatar_set(session_id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_botgram_send() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_toolbar_click() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_user_list() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_server_admin(domain: *const ::std::os::raw::c_char,
                       port: ::std::os::raw::c_int,
                       password: *mut ::std::os::raw::c_char,
                       instance: *mut *mut ::std::os::raw::c_void)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_server_world_add() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_server_world_delete(id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_server_world_change(id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_server_world_list() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_server_world_start(id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_server_world_stop(id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_server_world_set(id: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_contact_add(citizen: ::std::os::raw::c_int,
                      options: ::std::os::raw::c_ushort)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_contact_add_by_name(name: *mut ::std::os::raw::c_char,
                              options: ::std::os::raw::c_ushort)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_contact_change(citizen: ::std::os::raw::c_int,
                         options: ::std::os::raw::c_ushort)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_contact_delete(citizen: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_contact_list(start: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_afk_set(flag: ::std::os::raw::c_int) -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_telegram_send(to: *mut ::std::os::raw::c_char,
                        msg: *mut ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_join(citizen: ::std::os::raw::c_int) -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_join_reply(citizen: ::std::os::raw::c_int,
                     reply_rc: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_password_send() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_immigrate() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_register(renewal: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_send_file() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_send_file_reply(reply_rc: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_login_timeout_set(timeout: ::std::os::raw::c_int) {}
#[no_mangle] pub extern fn aw_tunnel_set(domain: *const ::std::os::raw::c_char,
                     port: ::std::os::raw::c_ushort)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_tunnel_set_resolved(address: ::std::os::raw::c_ulong,
                              port: ::std::os::raw::c_ushort)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_proxy_set(domain: *const ::std::os::raw::c_char,
                    port: ::std::os::raw::c_ushort)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_proxy_set_resolved(address: ::std::os::raw::c_ulong,
                             port: ::std::os::raw::c_ushort)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_proxy_set_login(name: *const ::std::os::raw::c_char,
                          password: *const ::std::os::raw::c_char)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_connection() -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_connection_set(type_: ::std::os::raw::c_int)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_connection_state(instance: *mut ::std::os::raw::c_void)
 -> ::std::os::raw::c_int { 0 }
#[no_mangle] pub extern fn aw_voip_data(data: *mut ::std::os::raw::c_void,
                    len: ::std::os::raw::c_uint) -> ::std::os::raw::c_int { 0 }
